#include <Servo.h>
#include <Keypad.h>
#include <LiquidCrystal.h>

#define pswd_len 5 //password len=5 with null character
Servo myservo;
LiquidCrystal lcd(A0,A1,A2,A3,A4,A5); //rs,en,d4,d5,d6,d7;
const byte rows=4;
const byte cols=4;
char keys[rows][cols]={{'1','2','3','A'},{'4','5','6','B'},
{'7','8','9','C'},{'*','0','#','D'}};
byte rp[rows]={0,1,2,3};  //rowpins
byte cp[cols]={4,5,6,7};  //col pins
Keypad custom(makeKeymap(keys),rp,cp,rows,cols);
int pos=0;
char Data[pswd_len];
char Master[pswd_len]="ABC6";
byte data_count=0;
byte master_count=0;
bool door=false;
char customKey;

void setup()
{
  myservo.attach(10);
  ServoClose();  //to keep door closed-user defined function
  lcd.begin(16,2);
  lcd.print("Door is locked");
  lcd.setCursor(0,1);
  lcd.print("Loading...");
  delay(1000);
  lcd.clear();
}
void loop()
{
  open();
}
void clearData()
{
  while(data_count!=0)
  {
    Data[data_count--]=0;
  }
  return;
}
void ServoClose()
{
  for(pos=90;pos>=0;pos-=10)
  {
    myservo.write(pos);
  }
}
void Servoopen()
{
  for(pos=0;pos<=90;pos+=10)
  {
    myservo.write(pos);
  }
}
void open()
{
  lcd.setCursor(0,0);
  lcd.print("Enter Password");
  customKey=custom.getKey();
  if(customKey)
  {
    Data[data_count]=customKey;
    lcd.setCursor(data_count,1);
    lcd.print(Data[data_count]);
    data_count++;
  }
  if(data_count==pswd_len-1)
  {
    if (!strcmp(Data, Master)) //stecmp returns 0 if they match
    {
      lcd.clear();
      lcd.print("Opening door...");
      delay(1000);
      Servoopen();
      lcd.clear();
      lcd.print("Opened");
      door=true;
      lcd.setCursor(0,1);
      lcd.print("waiting..");
      delay(4000);
      lcd.clear();
      lcd.print("closing door");
      delay(1000);
      ServoClose();
      lcd.clear();
      lcd.print("Closed");
      door=false;
      delay(2000);
    }
    else
    {
      lcd.clear();
      lcd.print("ERROR");
      door=false;
    }
     delay(2000);
     lcd.clear();
    clearData();
  }
}
